rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Public read access for reports and events
    match /reports/{reportId} {
      allow read: if true;
      allow create: if request.auth != null 
        && request.resource.data.keys().hasAll(['location', 'timestamp', 'type', 'userId'])
        && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Synthesized events - public read, function write
    match /events/{eventId} {
      allow read: if true;
      allow write: if false; // Only Cloud Functions can write
    }
    
    // User subscriptions and preferences
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // City analytics and predictions - public read, function write
    match /analytics/{docId} {
      allow read: if true;
      allow write: if false; // Only Cloud Functions can write
    }
    
    // Sentiment data for mood map
    match /sentiment/{docId} {
      allow read: if true;
      allow write: if false; // Only Cloud Functions can write
    }
    
    // Real-time feeds and social media data
    match /feeds/{feedId} {
      allow read: if true;
      allow write: if false; // Only Cloud Functions can write
    }
  }
} 